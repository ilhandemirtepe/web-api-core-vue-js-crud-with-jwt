
@{
    ViewData["Title"] = "IndexOne";
}

<style type="text/css">
    /* Style the tab */
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

        /* Style the buttons that are used to open the tab content */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
        }

            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }
</style>
<div id="appCommon">



    <div class="tab">
        <button class="tablinks" onclick="openCity(event, 'Kategoriler')" id="defaultOpen">Kategoriler</button>
        <button class="tablinks" onclick="openCity(event, 'Urunler')">Ürünler</button>
        <button class="tablinks" onclick="openCity(event, 'ProductSearch')">Ürün Search </button>
    </div>

    <div id="Kategoriler" class="tabcontent">
        <h3>Kategoriler</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Numara</th>
                    <th>Name</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(category,index) in categories">
                    <td>{{index+1}}</td>
                    <td>{{category.categoryName}}</td>
                    <td>{{category.description}}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div id="Urunler" class="tabcontent">
        <h3>Ürünler</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Numara</th>
                    <th>Name</th>
                    <th>Fiyat</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(product,index) in products">
                    <td>{{index+1}}</td>
                    <td>{{product.productName}}</td>
                    <td>{{product.unitprice}}</td>
                  
                </tr>
            </tbody>
        </table>
    </div>

    <div id="ProductSearch" class="tabcontent">
        <h3>Ürün ve Kategori Arama Kısmı</h3>
        <input v-model="productName" style="text-align:center" type="text" placeholder="ürün adı giriniz">
        <input v-model="categoryName" style="text-align:center" type="text" placeholder="kategori adı giriniz">
        <table class="table">
            <thead>
                <tr>
                    <th>Numara</th>
                    <th>Ürün Adı</th>
                    <th>Kategori Adı</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(pc,index) in productsCategory">
                    <td>{{index+1}}</td>
                    <td>{{pc.productName}}</td>
                    <td>{{pc.categoryName}}</td>

                </tr>
            </tbody>
        </table>
    </div>









   
</div>
<script src="~/lib/jquery/jquery.min.js"></script>
<script src="~/lib/vue/vue@2.js"></script>
<script>
    var app = new Vue({
        el: '#appCommon',
        data: {
            categories: [],
            products: [],
            productsCategory: [],
            productName: "",
            categoryName: "",
        },
        watch: {
            productName: function (val) {
                this.productName = val;
                this.getProductCategory();
            },
            categoryName: function (val) {              
                this.categoryName = val;
                this.getProductCategory();
            }
        },
        created: function () {
            this.getCategory();
            this.getProduct();
            this.getProductCategory();
           
        },
        methods: {
            getProductCategory: function () {
                var vm = this;
                var token = localStorage.getItem("userToken");
                $.ajax({
                    url: "http://localhost:52739/api/products/getBySearchProductCategory",
                    type: "GET",
                    data: { categoryName: vm.categoryName, productName: vm.productName },
                    crossDomain: true,
                    dataType: "json",
                    headers: {
                        "accept": "application/json",
                        "content-type": "application/json",
                        "authorization": "Bearer " + token
                    },
                    success: function (data) {
                        vm.productsCategory = data;
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Hata Oluştu");
                    }
                });
            },
            getCategory: function ()
            {
                var vm = this;
                var token = localStorage.getItem("userToken");
                $.ajax({
                    url: "http://localhost:52739/api/categories/getall",
                    type: "GET",
                    crossDomain: true,
                    dataType: "json",
                    headers: {
                        "accept": "application/json",
                        "content-type": "application/json",
                        "authorization": "Bearer " + token
                    },
                    success: function (data) {
                        vm.categories = data;
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Hata Oluştu");
                    }
                });
            },
            getProduct: function () {
                var vm = this;
                var token = localStorage.getItem("userToken");
                $.ajax({
                    url: "http://localhost:52739/api/products/getall",
                    type: "GET",
                    crossDomain: true,
                    dataType: "json",
                    headers: {
                        "accept": "application/json",
                        "content-type": "application/json",
                        "authorization": "Bearer " + token
                    },
                    success: function (data) {
                        vm.products = data;
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Hata Oluştu");
                    }
                });
            }
        }
    });
</script>
<script>
    document.getElementById("defaultOpen").click();
    function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>

